"""
Напишите класс специализированного потока MyThread, который:

В конструкторе позволяет указывать два аргумента: target, result. Значение обоих атрибутов по умолчанию None.
Для экземпляров класса позволяет обращаться к этим атрибутам .target и .result
Имеет проверку указания целевой функции. В функции run() класса должна осуществляться  проверка на передачу целевой функции (назначение target). Если target не назначен (остался в значении по умолчанию) — возбуждать исключение NoTargetException, где в качестве единственного позиционного аргумента передать имя потока. Если target назначен, присвоить атрибуту result значение, возвращаемое целевой функцией указанной в target.
При выполнении целевая функция может возбуждать различные исключения, поэтому дополнительно необходимо:

Определить функцию custom_hook, которая выводит на печать строку вида:
name (id=ID) failed
где name - имя потока, ID - идентификатор потока (ident).
Например:
T3 (id=555555) failed
Указать эту функцию в качестве функции перехвата исключений.
В тестирующей системе уже определен класс NoTargetException (унаследованный от Exception), который в качестве аргумента принимает название потока (тип str) и всего-лишь выводит на печать строку вида:
name has no target
где name — переданное название потока.

Также в тестирующей системе определена целевая функция. В процессе тестирования она будет завершаться успешно и возвращать результат или возбуждать исключение в результате своей работы.

Итак: пишем класс потока  MyThread -> создаем функцию custom_hook -> назначаем ее в качестве функции перехвата исключений.

Создание и запуск потоков нескольких потоков MyThread, проверку исключений выполняет тестирующая система. Вы можете проверить код самостоятельно, добиваясь вывода как в Sample Output.
Внимание! id потоков, конечно же, у Вас будут другие!

Возможно, Вам не повредит перечитать теорию о threading.excepthook.
"""

import threading
import traceback


def custom_hook(args):
    exc_type, exc_value, exc_traceback, exc_thread = args
    print(f"Тип исключения: {exc_type.__name__}")
    print(f"Сообщение исключения: {exc_value}")
    print(f"Номер потока: {exc_thread.ident}")
    print(f"Имя потока: {exc_thread.name}")
    print(f"Путь исключения:")
    traceback.print_tb(exc_traceback)


class MyThread(threading.Thread):
    def __init__(self):
        super().__init__()
        self.target = None
        self.result = None

    def run(self):
        if self.target:
            self.result = self.target()
        else:
            raise NoTargetException
