"""
Посмотрите это видео на youtube канале Engineer Man. Кто не владеет английским, не забудьте включить субтитры и автоперевод.

Кратко опишу суть: автор видео якобы выиграл бесплатную PlayStation 5, его просят лишь ввести данные своей кредитной карты и заплатить 1 дол. за доставку. Само собой сайт фейковый, который ворует данные карты владельца и, видимо, 1 дол. Если заполнить поля ввода для кредитной карты, сайт для проверки валидности карты отправляет запросы на реальный сервис проверки, который обходится мошеннику в 5 центов за запрос. А сам запрос длится ~2 секунды. Зная это, автор видео решает проучить мошенника, организовав большое количество запросов на сервис проверки с помощью потоков, многократно проверяя один и тот же номер кредитной карты.

Ваша задача - повторить этот трюк. Но с учетом новых условий. Мошенник поумнел и построил защиту, которая блокирует проверочные запросы для не уникальных или не валидных кредитных карт, поэтому заспамить проверку только одной картой теперь уже не получится. Напишите решение с учетом этого нового условия, чтобы в течении 4 секунд мошенник потерял 3 доллара (не менее 3 долларов).

Валидные кредитные карты - это карты с номерами в диапазоне 4007000000028 - 4007000000099 включительно.

В тестирующей системе проверяется, что:
- Ваше решение за 4 секунды (или менее) приводит к уменьшению баланса мошенника на 3 доллара (или больше).
- Ваше решение "не зависает" и выполняется не более 5 секунд.

При этом в тестирующее системе уже определена функция запроса валидации карты как:

def do_request(card_number: str):
    ...
"""

import threading
from time import sleep, perf_counter
start_time = perf_counter()


def do_request(card_number: str):
    pass


for number_card in range(4007000000028, 4007000000100):
    thread = threading.Thread(target=do_request, args=(number_card,), daemon=True)
    thread.start()

sleep(4.9)

print(perf_counter() - start_time)
