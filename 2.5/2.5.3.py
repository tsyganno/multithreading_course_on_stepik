"""
Вернемся к задаче про заголовки урока 2.1.

Создайте специализированный поток (через переопределения класса) получения заголовков интернет ресурсов со следующими свойствами:
1. Имя класса — GetHeaders;
2. Единственный задаваемый параметр — url: string. Ссылка на ресурс.
3. Атрибут с результатом — url_headers в виде словаря, где единственный ключ — url ссылка на ресурс. Значение — словарь заголовков. Для примера:

url_headers: dict[str, dict] = {"https://ya.ru": {"Content-Type": "application/json", ...}}
Допишите программу с учетом того, что список ссылок и функция получения заголовков уже определена в тестирующей системе как:

import requests


sources = ["https://ya.ru",
           "https://www.bing.com",
           "https://www.google.ru",
           "https://www.yahoo.com",
           "https://mail.ru"]

def get_request_header(url: str) -> dict:
    return requests.get(url).headers

Не копируйте эту часть кода себе. Вам необходимо только описать класс без создания экземпляров класса и их запуска. Тестирующая система создаст и запустит несколько экземпляров класса и проверит результат, обратившись к атрибуту url_headers.

Примечание 1. Здесь и дальше в подобных задачах инструкции запроса оформлены в виде функции только по причине некоторых ограничений реализации тестирующей системы платформы. В реальных задачах при переопределении класса целевую функцию не обязательно оформлять в виде функции. Всю целевую задачу можно определить в методе run.
"""

import threading


class GetHeaders(threading.Thread):
    def __init__(self, url):
        super().__init__()
        self.url = url
        self.url_headers = {}

    def run(self):
        self.url_headers[self.url] = get_request_header(self.url)
