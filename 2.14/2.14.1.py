"""
Закрепим использование пула потоков и метода map на простом задании.

Ваша задача:

Создать функцию инициализатора, которую должен вызывать каждый новый поток пула при своем создании. Функция инициализатора очень простая. Она не принимает аргументов. Всего лишь печатает в терминал сообщение:
Поток <thread_name> выполняет инициализацию
где <thread_name> — имя текущего потока пула.
С помощью контекстного менеджера создать пул потоков и, используя метод map, запустить на выполнение 10 задач task, каждой передав в качестве единственного аргумента целое число из ряда 1, 2, 3..... 10
task(1), task(2), ... task(10)
Функция task определена в тестирующей системе, не изменяйте ее.
Используя соответствующие аргументы в конструкторе пула:
- ограничьте количество одновременно активных потоков пула. Разрешите выполнять задачу конкурентно не более чем тремя потоками пула;
- укажите префикс имени потоков пула, чтобы они назывались task_pool_0, task_pool_1 и т.д.
Тестирующая система проверит порядок вызова задач task и вывод программы.
"""

# импортируйте необходимое
from concurrent.futures import ThreadPoolExecutor
import threading


# создайте функцию инициализации
def initial():
    name = threading.current_thread().name
    print(f"Поток {name} выполняет инициализацию")

# создайте пул потоков согласно условию задачи и
# запустите задачи, используя map и контекстный менеджер пула

pool = ThreadPoolExecutor(max_workers=3, thread_name_prefix=f'task_pool', initializer=initial)

with pool:
    pool_map = pool.map(task, range(1, 11))
